import math
import random
import radio
import microbit
def get_message():
    message = None    
    while message == None:
        microbit.sleep(250)
        message = radio.receive()    
    return message
group_id = ..........
radio.on()
radio.config(group=group_id)
Board = ['0','0','0','0','0',':','0','0','0','0','0',':','0','0','0','0','0',':','0','0','0','0','0',':','0','0','0','0','0']
nb_dropped_pieces = 0
game_is_over = False
while not game_is_over:
    microbit.display.show(nb_dropped_pieces)
    Piece_Position = ['0','0','0','0','0',':','0','0','0','0','0',':','0','0','0','0','0',':','0','0','0','0','0',':','0','0','0','0','0']    
    Piece_Choisi = random.randint(1,3)  
    if Piece_Choisi == 1:
       Piece_Position[0] = 9 && Piece_Position[1] = 9 && Piece_Position[7] = 9
    if Piece_Choisi == 2:
       Piece_Position[0] = 9 && Piece_Position[1] = 9 && Piece_Position[7] = 9 && Piece_Position[13] = 9
    if Piece_Choisi == 3:
       Piece_Position[0] = 9 && Piece_Position[1] = 9 && Piece_Position[2] = 9 && Piece_Position[9] = 9 
    N = 0
    for i in range(len(Board):
        if Board[N] == Piece_Position[N] :
           game_is_over = True
        N += 1  
    if game_is_over == False:
       L = 0
       for i in range(len(Board):
           Board[L] = Piece_Position[L]
           L +=1
    if not game_is_over:
        piece_dropped = False
        while not piece_dropped:
            Rien = ''
            Plateau = Rien.join(Board)
            radio.send(Plateau)
               
            order = get_message()          
            # execute order (drop or move piece)
            if order == 'left' :
                 Piece_bouge = 0
                 Pixel = 0
                 for i in range(len(Board):
                    if Board[Pixel] == 9 and Pixel == 0 or Pixel == 6 or Pixel == 12 or Pixel == 18 or Pixel == 24:
                          Piece_bouge += 1
                    Pixel += 1                                
                if Piece_bouge == 0:
                  Pixel = 0
                  for i in range(len(Board):
                      if Piece_Position[Pixel] == 9:
                          if Board[Pixel-1] == 0:                
                             Piece_Position[Pixel] == 0
                             Piece_Position[Pixel-1] == 9
                             Board[Pixel-1] == 9
                      Pixel += 1
              if order == 'right':
                 Piece_bouge = 0
                 Pixel = 0
                 for i in range(len(Board):                   
                    if Board[Pixel] == 9 and Pixel == 4 or Pixel == 10 or Pixel == 16 or Pixel == 22 or Pixel == 28:
                          Piece_bouge += 1
                    Pixel += 1                
                if Piece_bouge == 0:
                  Pixel = 28
                  for i in range(len(Board):
                      if Piece_Position[Pixel] == 9:
                          if Board[Pixel+1] == 0:
                   
                             Piece_Position[Pixel] == 0
                             Piece_Position[Pixel+1] == 9
                             Board[Pixel+1] == 9
                      Pixel -= 1   
              if order == 'up':
                 Piece_bouge = 0
                 Pixel = 0
                 for i in range(len(Board):
                    if Board[Pixel] == 9 and Pixel == 0 or Pixel == 1 or Pixel == 2 or Pixel == 3 or Pixel == 4:
                          Piece_bouge += 1
                    Pixel += 1
                if Piece_bouge == 0:
                  Pixel = 0
                  for i in range(len(Board):
                      if Piece_Position[Pixel] == 9:   
                          if Board[Pixel-6] == 0:
                             Piece_Position[Pixel] == 0
                             Piece_Position[Pixel-6] == 9
                             Board[Pixel-6] == 9
                     Pixel += 1
               if order == 'down':
                 Piece_bouge = 0
                 Pixel = 0
                 for i in range(len(Board): 
                    if Board[Pixel] == 9 and Pixel == 0 or Pixel == 1 or Pixel == 2 or Pixel == 3 or Pixel == 4:
                          Piece_bouge += 1
                    Pixel += 1
                if Piece_bouge == 0:
                  Pixel = 28
                  for i in range(len(Board):
                      if Piece_Position[Pixel] == 9:
                          if Board[Pixel+6] == 0
                             Piece_Position[Pixel] == 0
                             Piece_Position[Pixe+6] == 9
                             Board[Pixel+6] == 9                       
                      Pixel -= 1
                 if order == 'drop':
                    piece_dropped = True
        microbit.sleep(500)
        microbit.display.clear()
microbit.display.scroll('Game is over', delay=100)
